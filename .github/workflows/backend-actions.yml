name: BobApp Backend CI/CD
run-name: ${{ github.actor }} | Backend BobApp
on:
  push:
    branches:
      - main
    paths:
      - 'back/**'
  pull_request:
    branches:
      - main
    paths:
      - 'back/**'
jobs:
  build:
    name: Build, Test and Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Setup JDK 17"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'maven'
#      - name: Cache SonarQube packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        working-directory: ./back
        run: mvn -B package --file pom.xml

      - name: Test
        working-directory: ./back
        run: mvn clean package

      - name: 'Generate Jacoco report'
        working-directory: ./back
        run: mvn jacoco:report

      - name: 'Upload Jacoco coverage report'
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: ./back/target/site/jacoco/index.html
        if: ${{ steps.jacoco-report.outcome }} == 'success'

#      - name: Build and analyzes
#        working-directory: ./back
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar


#      - name: Test Report
#        uses: phoenix-actions/test-reporting@v8
#        id: test-report               # Set ID reference for step
#        if: success() || failure()    # run this step even if previous step failed
#        with:
#          name: JEST Tests            # Name of the check run which will be created
#          path: ./back/reports/jest-*.xml    # Path to test results
#          reporter: jest-junit        # Format of test results